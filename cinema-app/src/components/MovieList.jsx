// src/components/MovieList.jsx
import React, { useState, useMemo } from 'react';
import MovieCard from './MovieCard';
import '../styles/MovieList.css';

const MovieList = ({ movies }) => {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedGenre, setSelectedGenre] = useState('');

  // –û—Ç—Ä–∏–º—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –∂–∞–Ω—Ä–∏ –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞
  const genres = useMemo(() => {
    const allGenres = movies.flatMap(movie => 
      movie.genre.split(', ').map(g => g.trim())
    );
    return [...new Set(allGenres)].sort();
  }, [movies]);

  // –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ñ—ñ–ª—å–º–∏ –∑–∞ –ø–æ—à—É–∫–æ–≤–∏–º –∑–∞–ø–∏—Ç–æ–º —Ç–∞ –∂–∞–Ω—Ä–æ–º
  const filteredMovies = useMemo(() => {
    return movies.filter(movie => {
      const matchesSearch = movie.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                           movie.description.toLowerCase().includes(searchTerm.toLowerCase());
      
      const matchesGenre = selectedGenre === '' || 
                          movie.genre.toLowerCase().includes(selectedGenre.toLowerCase());
      
      return matchesSearch && matchesGenre;
    });
  }, [movies, searchTerm, selectedGenre]);

  const handleSearchChange = (e) => {
    setSearchTerm(e.target.value);
  };

  const handleGenreChange = (e) => {
    setSelectedGenre(e.target.value);
  };

  const clearFilters = () => {
    setSearchTerm('');
    setSelectedGenre('');
  };

  return (
    <div className="movie-list-container">
      <div className="filters-section">
        <h2 className="section-title">–ê–∫—Ç—É–∞–ª—å–Ω—ñ —Ñ—ñ–ª—å–º–∏</h2>
        
        <div className="filters">
          <div className="search-filter">
            <input
              type="text"
              placeholder="üîç –ü–æ—à—É–∫ —Ñ—ñ–ª—å–º—ñ–≤..."
              value={searchTerm}
              onChange={handleSearchChange}
              className="search-input"
            />
          </div>
          
          <div className="genre-filter">
            <select
              value={selectedGenre}
              onChange={handleGenreChange}
              className="genre-select"
            >
              <option value="">üé≠ –í—Å—ñ –∂–∞–Ω—Ä–∏</option>
              {genres.map(genre => (
                <option key={genre} value={genre}>
                  {genre}
                </option>
              ))}
            </select>
          </div>
          
          {(searchTerm || selectedGenre) && (
            <button onClick={clearFilters} className="clear-filters-btn">
              ‚úï –û—á–∏—Å—Ç–∏—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏
            </button>
          )}
        </div>
        
        <div className="results-info">
          <span className="results-count">
            –ó–Ω–∞–π–¥–µ–Ω–æ —Ñ—ñ–ª—å–º—ñ–≤: {filteredMovies.length}
          </span>
        </div>
      </div>

      <div className="movies-grid">
        {filteredMovies.length > 0 ? (
          filteredMovies.map(movie => (
            <MovieCard key={movie.id} movie={movie} />
          ))
        ) : (
          <div className="no-movies">
            <div className="no-movies-icon">üé¨</div>
            <h3>–§—ñ–ª—å–º–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ</h3>
            <p>–°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–æ—à—É–∫—É –∞–±–æ –æ—á–∏—Å—Ç–∏—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏</p>
          </div>
        )}
      </div>
    </div>
  );
};

export default MovieList;